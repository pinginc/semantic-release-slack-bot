version: 2.1
orbs:
  sumologic: circleci/sumologic@1
  common: timebyping/common@2
parameters:
  executor-tag:
    type: string
    default: lts-browsers
    description: |
      Pick a specific circleci/node image variant: https://hub.docker.com/r/cimg/node/tags
jobs:
  lint:
    working_directory: /tmp/src
    docker:
      - image: cimg/node:<< pipeline.parameters.executor-tag >>
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
      - checkout
      - run: yarn
      - run: yarn run lint
  build:
    working_directory: /tmp/src
    docker:
      - image: cimg/node:<< pipeline.parameters.executor-tag >>
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
      - checkout
      - run: yarn
      - run: yarn run build
  test_spec:
    working_directory: /tmp/src
    docker:
      - image: cimg/node:<< pipeline.parameters.executor-tag >>
    resource_class: xlarge
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
      - checkout
      - run: echo "deb http://security.ubuntu.com/ubuntu focal-security main" | sudo tee /etc/apt/sources.list.d/focal-security.list
      - run: sudo apt update && sudo apt install libssl1.1
      - run: yarn
      - run: yarn run test
      - run: yarn run test:e2e
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: ./test-results
          destination: test-results
      - common/coverage
  sync_packages:
    docker:
      - image: cimg/node:<< pipeline.parameters.executor-tag >>
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
      - checkout
      - run: yarn
      - run: yarn run packages:sync
      - run: |
          git config --global user.email "ci@timebyping.com"
          git config --global user.name "TBP CI"

          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git commit -m "chore(manifests): sync package.json with src/packages"
            git push origin HEAD
          fi
  validate_permissions_json:
    docker:
      - image: cimg/node:<< pipeline.parameters.executor-tag >>
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
      - checkout
      - run: yarn
      - run: yarn run build
      - run: git checkout main bin/permissions.json
      - run: node ./dist/packages/nest-auth/script/generate-permissions-json.js bin/new-permissions.json
      - run: node ./dist/packages/nest-auth/script/validate-permissions-json.js bin/permissions.json bin/new-permissions.json
      - run: mv bin/new-permissions.json bin/permissions.json
      - run: |
          git config --global user.email "ci@timebyping.com"
          git config --global user.name "TBP CI"

          git add .

          if [[ -n $(git status --porcelain) ]]; then
            git commit -m "chore(permissions): regenerate permissions.json"
            git push origin HEAD
          fi
workflows:
  developer-branch:
    when:
      not:
        equal:
          - << pipeline.git.branch >>
          - main
    jobs:
      - sumologic/workflow-collector:
          context:
            - SUMOLOGIC
      - common/pr-lint:
          context:
            - GITHUB
      - lint:
          context:
            - NPM
      - sync_packages:
          context:
            - NPM
      - build:
          context:
            - NPM
      - test_spec:
          name: unit tests
          context:
            - NPM
      - validate_permissions_json:
          context:
            - NPM
  main-branch:
    when:
      equal:
        - << pipeline.git.branch >>
        - main
    jobs:
      - sumologic/workflow-collector:
          context:
            - SUMOLOGIC
      - lint:
          context:
            - NPM
      - build:
          context:
            - NPM
      - test_spec:
          name: unit tests
          context:
            - NPM
      - common/semantic-release:
          name: semantic release
          requires:
            - lint
            - build
            - unit tests
          context:
            - GITHUB
            - NPM
            - SLACK
          executor-tag: << pipeline.parameters.executor-tag >>
          package-manager: yarn
          dry-run: false
          github: true
          npm: true
